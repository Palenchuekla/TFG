- PyTorch Seed (used for initial values and batching) = 1234
- K-Fold Seed (used for generating partitions) = 1234
- Number of total params = 11177025
- Number of trainable params = 513
- Batch Size = 32
- Number of Epochs = 50
- Loss = BCEL_from_logit_positive_class() 
	- Reduction Method = mean
- Early Stopping = 
	- Tolerance = 0.01
	- Patience = 10
	- Metric = loss
- Dataset Original Length = 1394
- Image Pre-processing = Compose(
    ToTensor()
    Resize(size=[224, 224], interpolation=bilinear, max_size=None, antialias=False)
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)

- Data Augmentation: 
	*Transformation = {0: RandomApply(    RandomChoice(transforms=[RandomRotation(degrees=[90.0, 90.0], interpolation=InterpolationMode.NEAREST, expand=False, fill=0), RandomRotation(degrees=[180.0, 180.0], interpolation=InterpolationMode.NEAREST, expand=False, fill=0), RandomRotation(degrees=[270.0, 270.0], interpolation=InterpolationMode.NEAREST, expand=False, fill=0)], p=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333])), 1: RandomApply(    RandomChoice(transforms=[RandomRotation(degrees=[90.0, 90.0], interpolation=InterpolationMode.NEAREST, expand=False, fill=0), RandomRotation(degrees=[180.0, 180.0], interpolation=InterpolationMode.NEAREST, expand=False, fill=0), RandomRotation(degrees=[270.0, 270.0], interpolation=InterpolationMode.NEAREST, expand=False, fill=0)], p=[0.3333333333333333, 0.3333333333333333, 0.3333333333333333]))}

- MixUp: CustomMixUP()
	* First = True
- Optimizer = Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0001
    maximize: False
    weight_decay: 0
)
